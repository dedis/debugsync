name: Sonar

on:
  workflow_run:
    workflows:
      - Build
    types:
      - completed

jobs:

  sonar-analysis:
    runs-on: ubuntu-latest
#    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
    - name: echo event
      run: |
        echo 'Sonar analysis triggered by workflow event'
        cat $GITHUB_EVENT_PATH

    - name: Download PR number artifact
#      if: github.event.workflow_run.event == 'pull_request'
      uses: actions/download-artifact@v3
      with:
        workflow: Build
        run_id: ${{ github.event.workflow_run.id }}
        name: PR_NUMBER

    - name: Read PR_NUMBER.txt
#      if: github.event.workflow_run.event == 'pull_request'
      id: pr_number
      uses: juliangruber/read-file-action@v1

    - name: Request GitHub API for PR data
#      if: github.event.workflow_run.event == 'pull_request'
      uses: octokit/request-action@v2.x
      id: get_pr_data
      with:
        full_name: ${{ github.event.repository.full_name }}
        number: ${{ steps.pr_number.outputs.content }}
        route: GET /repos/{full_name}/pulls/{number}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Check out code into the Go module directory
      uses: actions/checkout@v3
      with:
        repository: ${{ github.event.workflow_run.head_repository.full_name }}
        ref: ${{ github.event.workflow_run.head_branch }}
        fetch-depth: 0

    - name: Checkout base branch
#     if: github.event.workflow_run.event == 'pull_request'
      run: |
        git remote add upstream ${{ github.event.repository.clone_url }}
        git fetch upstream
        git checkout -B ${{ fromJson(steps.get_pr_data.outputs.data).base.ref }} upstream/${{ fromJson(steps.get_pr_data.outputs.data).base.ref }}
        git checkout ${{ github.event.workflow_run.head_branch }}
        git clean -ffdx && git reset --hard HEAD

    - name: Download JSON report artifact
#      if: github.event.workflow_run.event == 'pull_request'
      uses: actions/download-artifact@v3
      with:
        workflow: Build
        name: COVERAGE
        path: report.json

    - name: Sonarcloud scan
#      if: github.event.workflow_run.event == 'pull_request'
      uses: sonarsource/sonarcloud-github-action@master
      with:
        args: >
          -Dsonar.organization=dedis
          -Dsonar.projectKey=debugsync
          -Dsonar.go.tests.reportPaths=report.json
          -Dsonar.go.coverage.reportPaths=profile.cov
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    - name: Send coverage
      uses: shogo82148/actions-goveralls@v1
      with:
        path-to-profile: profile.cov
#        parallel: true      

  # notifies that all jobs are finished.
  finish:
    needs: sonar-analysis
    runs-on: ubuntu-latest
    steps:
      - uses: shogo82148/actions-goveralls@v1
#        with:
#          parallel-finished: true